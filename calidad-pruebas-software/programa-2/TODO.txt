TODO:
totalGlobal = 0
FileReader fileReader
Printer printer
map<string, ClassEntry> base
map<string, ClassEntry> new
map<string, ClassEntry> reused

Inicializar fileReader
Leer nombre de archivo

Mientras el nombre de archivo no esté vacío (el usuario no haya dado enter solo)
    Abrir archivo especificado con el fileReader
    Si el archivo se pudo abrir
        Leer archivo
        Contar líneas de código
        Realizar cálculos según el estándar de contabilización: T, I, B, D, M, A
        Cerrar archivo
        Si ya existen datos de la parte:
            Acceder a su objeto en el mapa y actualizar datos
        Si es una parte nueva:
            Clasificar parte, crear objeto y agregar entrada a su arreglo correspondiente: base/new/reused
        Agregar total de LDC del archivo al total global

    Leer nuevo nombre de archivo

Imprimir resultados en archivo "ConteoLDC.txt" usando el formato especificado
Fin

FileReader
    readFile()
        Leer línea
        Eliminar todos los espacios y tabs de indentación
        Si es una línea vacía
            Leer siguiente línea
        Eliminar todos los espacios restantes después del primer caracter
        Si es una línea que solo contiene llaves
            Leer siguiente línea
        Leer caracter por caracter
            Si contiene el inicio de un comentario multilínea
                Activar bandera multilínea
            Si contiene el fin de un comentario multilínea
                Desactivar bandera multilínea
            Si contiene comentario de una sola línea
                Activar bandera comentario de una sola línea
            Procesar comentario en busca de identificadores
                Procesar línea, eliminando espacios o tabs entre los caracteres y comparar con el prefijo "//."
                Si el siguiente caracter es alfabético, comparar con los identificadores
                    Si es una línea que contiene un comentario "i"
                        items++
                    Si es una línea que contiene el comentario "b"
                        Extraer # de LDC base: parseQuantity()
                        base += parseQuantity("=#")
                    Si es una línea que contiene el comentario "d"
                        Extraer # de LDC eliminadas: parseQuantity()
                        deleted += parseQuantity("=#")
                    Si es una línea que contiene el comentario "m"
                        modified++
                    Si es cualquier otro caracter
                        Agregar error al log: "Identificador no válido"
                Si no es alfabético:
                    Agregar error al log: "Identificador no válido"
        Si no
            Si la bandera multilínea está activada
                No actualizar contador
            Si no está activada
            total++
        Fin

    parseQuantity()
        Elimina los tabs y espacios antes del signo '='
        Omite el signo igual
        Elimina los tabs y espacios después del signo '='
        Extrae todos los caracteres no vacíos restantes
        Verifica que todos los caracteres sean dígitos
        Si un caracter no es dígito:
            Agregar error al log
            Devolver código INVALID_QUANTITY (0)
        Si todos los caracteres son dígitos
            Devolver número casteado de string a int
    
    updateClassEntry(&ClassEntry)
        Recibe una entrada por referencia cuando la clase ya cuenta con registros
        Actualiza los datos
        Fin

    ClassEntry createClassEntry()
        Crea una nueva entrada de la clase y la devuelve para ser agregada a su categoría correspondiente
        Fin

    int getCategory()
        Si base > 0 && (modified > 0 || deleted > 0 || added > 0)
            La clase es base
        Si no, si base == 0 && modified == 0 && deleted == 0 && added > 0
            La clase es nueva
        Si no, si base > 0 && modified == 0 && deleted == 0 && added == 0
            La clase es reusada


Casos de prueba
1. La clase en cuestión no entra en ninguna de las categorías

Casos de prueba - verbose
1. Hay más de 2 LDC lógicas en una línea física
2. Hay más de 2 partes en un mismo archivo
3. El nombre de la parte no corresponde con el nombre del archivo
4. Hay espacios o tabs entre los caracteres de un posible identificador



    parseBase(line)
        Extrae el número de LDC base de otra clase
        base += value

    parseDeleted(line)
        Extrae el número de líneas borradas
        deleted += deleted